{"version":3,"sources":["api/api.ts","components/common/Preloader/Preloader.tsx","components/Comment/Comment.tsx","components/PostItem/PostItem.tsx","components/PostsList/PostsList.tsx","components/FilterField/FilterField.tsx","components/Posts/Posts.tsx","App.tsx","index.tsx"],"names":["fetchData","name","a","fetch","response","json","data","Preloader","className","Comment","body","email","href","toLowerCase","PostItem","title","user","comments","map","comment","key","id","PostsList","posts","post","FilterField","handleChange","htmlFor","type","placeholder","onChange","event","target","value","Posts","useState","isLoading","setIsLoading","isFetched","setIsFetched","setPosts","visiblePosts","setVisiblePosts","load","users","postsFromServer","find","person","userId","filter","postId","useEffect","debounce","includes","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46bbaf3a.chunk.js","sourcesContent":["export const fetchData = async (name: string) => {\n  const response = await fetch(`https://mate-academy.github.io/react_dynamic-list-of-posts/api/${name}.json`);\n  const data = await response.json();\n\n  return data;\n};\n","import React from 'react';\n\nexport const Preloader: React.FC = () => (\n  <div className=\"preloader-wrapper medium active\">\n    <div className=\"spinner-layer spinner-blue\">\n      <div className=\"circle-clipper left\">\n        <div className=\"circle\" />\n      </div>\n      <div className=\"gap-patch\">\n        <div className=\"circle\" />\n      </div>\n      <div className=\"circle-clipper right\">\n        <div className=\"circle\" />\n      </div>\n    </div>\n\n    <div className=\"spinner-layer spinner-red\">\n      <div className=\"circle-clipper left\">\n        <div className=\"circle\" />\n      </div>\n      <div className=\"gap-patch\">\n        <div className=\"circle\" />\n      </div>\n      <div className=\"circle-clipper right\">\n        <div className=\"circle\" />\n      </div>\n    </div>\n\n    <div className=\"spinner-layer spinner-yellow\">\n      <div className=\"circle-clipper left\">\n        <div className=\"circle\" />\n      </div>\n      <div className=\"gap-patch\">\n        <div className=\"circle\" />\n      </div>\n      <div className=\"circle-clipper right\">\n        <div className=\"circle\" />\n      </div>\n    </div>\n\n    <div className=\"spinner-layer spinner-green\">\n      <div className=\"circle-clipper left\">\n        <div className=\"circle\" />\n      </div>\n      <div className=\"gap-patch\">\n        <div className=\"circle\" />\n      </div>\n      <div className=\"circle-clipper right\">\n        <div className=\"circle\" />\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\ninterface CommentProps {\n  body: string;\n  name: string;\n  email: string;\n}\n\nexport const Comment: React.FC<CommentProps> = ({ body, name, email }) => (\n  <li className=\"post__comment\">\n    <a href={`mailto:${email}`} className=\"post__email\">\n      {email.toLowerCase()}\n    </a>\n    <h6>{name}</h6>\n    <p>{body}</p>\n  </li>\n);\n","import React from 'react';\nimport { UserInterface } from '../../interfaces/UserInterface';\nimport { CommentInterface } from '../../interfaces/CommentInterface';\nimport { Comment } from '../Comment';\n\ninterface PostItemProps {\n  title: string;\n  body: string;\n  user: UserInterface;\n  comments: CommentInterface[];\n}\n\nexport const PostItem: React.FC<PostItemProps> = ({\n  title,\n  body,\n  user,\n  comments,\n}) => (\n  <li className=\"post\">\n    <div className=\"post__author\">\n      <p className=\"red-text\">\n        <strong>\n          {user.name}\n        </strong>\n      </p>\n      <a href={`mailto:${user.email}`} className=\"post__email\">\n        {user.email.toLowerCase()}\n      </a>\n    </div>\n    <div className=\"post__content\">\n      <h3>{title}</h3>\n      <p className=\"flow-text\">{body}</p>\n      <ul>\n        {\n          comments.map(comment => (\n            <Comment\n              key={comment.id}\n              body={comment.body}\n              name={comment.name}\n              email={comment.email}\n            />\n          ))\n        }\n      </ul>\n    </div>\n  </li>\n);\n","import React from 'react';\nimport { PostInterface } from '../../interfaces/PostInterface';\nimport { PostItem } from '../PostItem';\n\ninterface PostsListProps {\n  posts: PostInterface[];\n}\n\nexport const PostsList: React.FC<PostsListProps> = ({ posts }) => {\n  return (\n    <ul>\n      {\n        posts.map((post: PostInterface) => (\n          <PostItem\n            key={post.id}\n            user={post.user}\n            title={post.title}\n            body={post.body}\n            comments={post.comments}\n          />\n        ))\n      }\n    </ul>\n  );\n};\n","import React from 'react';\n\ninterface FilterFieldProps {\n  handleChange(value: string): void;\n}\n\nexport const FilterField: React.FC<FilterFieldProps> = ({ handleChange }) => (\n  <div>\n    <label htmlFor=\"filterField\">\n      Filter by title and body\n    </label>\n    <input\n      type=\"text\"\n      id=\"filterField\"\n      className=\"validate\"\n      placeholder=\"Input here...\"\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => (\n        handleChange(event.target.value)\n      )}\n    />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport debounce from 'lodash/debounce';\nimport { fetchData } from '../../api/api';\nimport { Preloader } from '../common/Preloader';\nimport { PostsList } from '../PostsList';\nimport { PostInterface, PostOriginalInterface } from '../../interfaces/PostInterface';\nimport { UserInterface } from '../../interfaces/UserInterface';\nimport { CommentInterface } from '../../interfaces/CommentInterface';\nimport { FilterField } from '../FilterField/FilterField';\n\nexport const Posts: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isFetched, setIsFetched] = useState<boolean>(false);\n  const [posts, setPosts] = useState<PostInterface[]>([]);\n  const [visiblePosts, setVisiblePosts] = useState<PostInterface[]>([]);\n\n  const load = async () => {\n    setIsLoading(true);\n\n    const users = await fetchData('users');\n    const postsFromServer = await fetchData('posts');\n    const comments = await fetchData('comments');\n\n    setPosts(postsFromServer.map((post: PostOriginalInterface) => ({\n      ...post,\n      user: users.find((person: UserInterface) => person.id === post.userId),\n      comments: comments.filter((comment: CommentInterface) => comment.postId === post.id),\n    })));\n\n    setIsFetched(true);\n  };\n\n  useEffect(() => {\n    setVisiblePosts([...posts]);\n  }, [posts]);\n\n  const handleChange = debounce((value: string) => {\n    setVisiblePosts(posts\n      .filter((post: PostInterface) => (\n        post.title.includes(value) || post.body.includes(value)\n      )));\n  }, 1000);\n\n  if (!isFetched) {\n    return (\n      <div className=\"control\">\n        <button\n          type=\"button\"\n          className=\"btn btn-large red control__button\"\n          onClick={load}\n        >\n          Load\n        </button>\n        {\n          isLoading && <Preloader />\n        }\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <form className=\"form\">\n        <FilterField handleChange={handleChange} />\n      </form>\n      <PostsList posts={visiblePosts} />\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Posts } from './components/Posts';\n\nconst App: React.FC = () => (\n  <div className=\"container\">\n    <h1>Dynamic list of posts</h1>\n    <Posts />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}